// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/google/cloudprober/probes/external/serverutils/server.proto

/*
Package serverutils is a generated protocol buffer package.

It is generated from these files:
	github.com/google/cloudprober/probes/external/serverutils/server.proto

It has these top-level messages:
	ProbeRequest
	ProbeReply
*/
package serverutils

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ProbeRequest is the message that cloudprober sends to the external probe
// server.
type ProbeRequest struct {
	// The unique identifier for this request.  This is unique across
	// an execution of the probe server.  It starts at 1.
	RequestId *int32 `protobuf:"varint,1,req,name=request_id,json=requestId" json:"request_id,omitempty"`
	// How long to allow for the execution of this request, in
	// milliseconds.  If the time limit is exceeded, the server
	// should abort the request, but *not* send back a reply.  The
	// client will have to do timeouts anyway.
	TimeLimit        *int32                 `protobuf:"varint,2,req,name=time_limit,json=timeLimit" json:"time_limit,omitempty"`
	Options          []*ProbeRequest_Option `protobuf:"bytes,3,rep,name=options" json:"options,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *ProbeRequest) Reset()                    { *m = ProbeRequest{} }
func (m *ProbeRequest) String() string            { return proto.CompactTextString(m) }
func (*ProbeRequest) ProtoMessage()               {}
func (*ProbeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ProbeRequest) GetRequestId() int32 {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return 0
}

func (m *ProbeRequest) GetTimeLimit() int32 {
	if m != nil && m.TimeLimit != nil {
		return *m.TimeLimit
	}
	return 0
}

func (m *ProbeRequest) GetOptions() []*ProbeRequest_Option {
	if m != nil {
		return m.Options
	}
	return nil
}

type ProbeRequest_Option struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Value            *string `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProbeRequest_Option) Reset()                    { *m = ProbeRequest_Option{} }
func (m *ProbeRequest_Option) String() string            { return proto.CompactTextString(m) }
func (*ProbeRequest_Option) ProtoMessage()               {}
func (*ProbeRequest_Option) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *ProbeRequest_Option) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ProbeRequest_Option) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

// ProbeReply is the message that external probe server sends back to the
// cloudprober.
type ProbeReply struct {
	// The sequence number for this request.
	RequestId *int32 `protobuf:"varint,1,req,name=request_id,json=requestId" json:"request_id,omitempty"`
	// For a normal result, this is not present.
	// If it is present, it indicates that the probe failed.
	ErrorMessage *string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	// The result of the probe. Cloudprober parses the payload to retrieve
	// variables from it. It expects variables in the following format:
	// var1 value1 (for example: total_errors 589)
	// TODO: Add an option to export mapped variables, for example:
	// client-errors map:lang java:200 python:20 golang:3
	Payload          *string `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProbeReply) Reset()                    { *m = ProbeReply{} }
func (m *ProbeReply) String() string            { return proto.CompactTextString(m) }
func (*ProbeReply) ProtoMessage()               {}
func (*ProbeReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ProbeReply) GetRequestId() int32 {
	if m != nil && m.RequestId != nil {
		return *m.RequestId
	}
	return 0
}

func (m *ProbeReply) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

func (m *ProbeReply) GetPayload() string {
	if m != nil && m.Payload != nil {
		return *m.Payload
	}
	return ""
}

func init() {
	proto.RegisterType((*ProbeRequest)(nil), "cloudprober.ProbeRequest")
	proto.RegisterType((*ProbeRequest_Option)(nil), "cloudprober.ProbeRequest.Option")
	proto.RegisterType((*ProbeReply)(nil), "cloudprober.ProbeReply")
}

func init() {
	proto.RegisterFile("github.com/google/cloudprober/probes/external/serverutils/server.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 257 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x8e, 0x41, 0x6a, 0xf3, 0x30,
	0x10, 0x85, 0x71, 0xfc, 0xe7, 0x0f, 0x9e, 0xa4, 0x1b, 0xd1, 0x85, 0x29, 0x14, 0x4c, 0xba, 0xf1,
	0xca, 0x86, 0x2c, 0x7b, 0x80, 0x42, 0xa1, 0xa5, 0x45, 0x17, 0x30, 0x4a, 0x3c, 0xb8, 0x2a, 0xb2,
	0xc7, 0x1d, 0xc9, 0xa1, 0xb9, 0x5b, 0x0f, 0x57, 0x24, 0x39, 0xe0, 0x5d, 0x57, 0x7a, 0xf3, 0x3d,
	0xcd, 0x7b, 0x03, 0x4f, 0x9d, 0x76, 0x1f, 0xd3, 0xb1, 0x3a, 0x51, 0x5f, 0x77, 0x44, 0x9d, 0xc1,
	0xfa, 0x64, 0x68, 0x6a, 0x47, 0xa6, 0x23, 0x72, 0x1d, 0x1e, 0x5b, 0xe3, 0xb7, 0x43, 0x1e, 0x94,
	0xa9, 0x2d, 0xf2, 0x19, 0x79, 0x72, 0xda, 0xd8, 0x59, 0x57, 0x23, 0x93, 0x23, 0xb1, 0x5d, 0x6c,
	0xed, 0x7f, 0x12, 0xd8, 0xbd, 0x7b, 0x29, 0xf1, 0x6b, 0x42, 0xeb, 0xc4, 0x3d, 0x00, 0x47, 0xd9,
	0xe8, 0x36, 0x4f, 0x8a, 0x55, 0xb9, 0x96, 0xd9, 0x4c, 0x9e, 0x5b, 0x6f, 0x3b, 0xdd, 0x63, 0x63,
	0x74, 0xaf, 0x5d, 0xbe, 0x8a, 0xb6, 0x27, 0x2f, 0x1e, 0x88, 0x47, 0xd8, 0xd0, 0xe8, 0x34, 0x0d,
	0x36, 0x4f, 0x8b, 0xb4, 0xdc, 0x1e, 0x8a, 0x6a, 0xd1, 0x56, 0x2d, 0x9b, 0xaa, 0xb7, 0xf0, 0x51,
	0x5e, 0x17, 0xee, 0x0e, 0xf0, 0x3f, 0x22, 0x21, 0xe0, 0xdf, 0xa0, 0x7a, 0x0c, 0xed, 0x99, 0x0c,
	0x5a, 0xdc, 0xc2, 0xfa, 0xac, 0xcc, 0x84, 0xa1, 0x33, 0x93, 0x71, 0xd8, 0x7f, 0x02, 0xcc, 0x99,
	0xa3, 0xb9, 0xfc, 0x75, 0xfb, 0x03, 0xdc, 0x20, 0x33, 0x71, 0xd3, 0xa3, 0xb5, 0xaa, 0xf3, 0x51,
	0x49, 0x99, 0xc9, 0x5d, 0x80, 0xaf, 0x91, 0x89, 0x1c, 0x36, 0xa3, 0xba, 0x18, 0x52, 0x6d, 0x9e,
	0x06, 0xfb, 0x3a, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xe3, 0xc0, 0x9c, 0xb3, 0x80, 0x01, 0x00,
	0x00,
}
