// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/google/cloudprober/surfacers/stackdriver/config.proto

/*
Package stackdriver is a generated protocol buffer package.

It is generated from these files:
	github.com/google/cloudprober/surfacers/stackdriver/config.proto

It has these top-level messages:
	SurfacerConf
*/
package stackdriver

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SurfacerConf struct {
	Batch            *bool   `protobuf:"varint,1,opt,name=batch,def=1" json:"batch,omitempty"`
	BatchSize        *uint64 `protobuf:"varint,2,opt,name=batch_size,json=batchSize,def=200" json:"batch_size,omitempty"`
	BatchTimerSec    *uint64 `protobuf:"varint,3,opt,name=batch_timer_sec,json=batchTimerSec,def=10" json:"batch_timer_sec,omitempty"`
	MonitoringUrl    *string `protobuf:"bytes,5,opt,name=monitoring_url,json=monitoringUrl,def=custom.googleapis.com/" json:"monitoring_url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SurfacerConf) Reset()                    { *m = SurfacerConf{} }
func (m *SurfacerConf) String() string            { return proto.CompactTextString(m) }
func (*SurfacerConf) ProtoMessage()               {}
func (*SurfacerConf) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

const Default_SurfacerConf_Batch bool = true
const Default_SurfacerConf_BatchSize uint64 = 200
const Default_SurfacerConf_BatchTimerSec uint64 = 10
const Default_SurfacerConf_MonitoringUrl string = "custom.googleapis.com/"

func (m *SurfacerConf) GetBatch() bool {
	if m != nil && m.Batch != nil {
		return *m.Batch
	}
	return Default_SurfacerConf_Batch
}

func (m *SurfacerConf) GetBatchSize() uint64 {
	if m != nil && m.BatchSize != nil {
		return *m.BatchSize
	}
	return Default_SurfacerConf_BatchSize
}

func (m *SurfacerConf) GetBatchTimerSec() uint64 {
	if m != nil && m.BatchTimerSec != nil {
		return *m.BatchTimerSec
	}
	return Default_SurfacerConf_BatchTimerSec
}

func (m *SurfacerConf) GetMonitoringUrl() string {
	if m != nil && m.MonitoringUrl != nil {
		return *m.MonitoringUrl
	}
	return Default_SurfacerConf_MonitoringUrl
}

func init() {
	proto.RegisterType((*SurfacerConf)(nil), "cloudprober.surfacer.stackdriver.SurfacerConf")
}

func init() {
	proto.RegisterFile("github.com/google/cloudprober/surfacers/stackdriver/config.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xd0, 0xcf, 0x4a, 0xc4, 0x30,
	0x10, 0xc7, 0x71, 0xba, 0x7f, 0xc0, 0x0d, 0xae, 0x42, 0x0e, 0x52, 0x3c, 0x95, 0x3d, 0x15, 0x0f,
	0x49, 0xf5, 0x58, 0x10, 0x04, 0xdf, 0xa0, 0xd5, 0x73, 0x69, 0xb3, 0xd3, 0xec, 0x60, 0xdb, 0x29,
	0x93, 0xc4, 0xc3, 0xbe, 0x99, 0x6f, 0x27, 0xa6, 0x8a, 0x7b, 0x0b, 0xbf, 0xef, 0xe7, 0x92, 0x11,
	0x2f, 0x16, 0xfd, 0x29, 0x74, 0xca, 0xd0, 0xa8, 0x2d, 0x91, 0x1d, 0x40, 0x9b, 0x81, 0xc2, 0x71,
	0x66, 0xea, 0x80, 0xb5, 0x0b, 0xdc, 0xb7, 0x06, 0xd8, 0x69, 0xe7, 0x5b, 0xf3, 0x71, 0x64, 0xfc,
	0x04, 0xd6, 0x86, 0xa6, 0x1e, 0xad, 0x9a, 0x99, 0x3c, 0xc9, 0xec, 0xc2, 0xab, 0x3f, 0xaf, 0x2e,
	0xf8, 0xe1, 0x2b, 0x11, 0xd7, 0xf5, 0x6f, 0x78, 0xa5, 0xa9, 0x97, 0xf7, 0x62, 0xdb, 0xb5, 0xde,
	0x9c, 0xd2, 0x24, 0x4b, 0xf2, 0xab, 0x72, 0xe3, 0x39, 0x40, 0xb5, 0x4c, 0xf2, 0x20, 0x44, 0x7c,
	0x34, 0x0e, 0xcf, 0x90, 0xae, 0xb2, 0x24, 0xdf, 0x94, 0xeb, 0xa7, 0xa2, 0xa8, 0x76, 0x71, 0xae,
	0xf1, 0x0c, 0xf2, 0x41, 0xdc, 0x2e, 0xc6, 0xe3, 0x08, 0xdc, 0x38, 0x30, 0xe9, 0x3a, 0xc2, 0xd5,
	0x63, 0x51, 0xed, 0x63, 0x7a, 0xfb, 0x29, 0x35, 0x18, 0xf9, 0x2c, 0x6e, 0x46, 0x9a, 0xd0, 0x13,
	0xe3, 0x64, 0x9b, 0xc0, 0x43, 0xba, 0xcd, 0x92, 0x7c, 0x57, 0xde, 0x99, 0xe0, 0x3c, 0x8d, 0x6a,
	0xf9, 0x74, 0x3b, 0xa3, 0x8b, 0x37, 0xa8, 0xf6, 0xff, 0xfa, 0x9d, 0x87, 0xef, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x5c, 0x48, 0x22, 0x94, 0x20, 0x01, 0x00, 0x00,
}
